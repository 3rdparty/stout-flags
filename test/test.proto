syntax = "proto3";

package test;

import "google/protobuf/duration.proto";
import "stout/v1/flag.proto";
import "stout/v1/positional_argument.proto";
import "stout/v1/subcommand.proto";

///////////////////////////////////////////////////////////////////////////////

message Flags {
  string foo = 1 [
    (stout.v1.flag) = {
      names: [ "foo" ]
      help: "help"
      required: true
    }
  ];

  string _s = 2 [
    (stout.v1.flag) = {
      names: [ "s" ]
      help: "help"
      required: false
    }
  ];

  bool bar = 3 [
    (stout.v1.flag) = {
      names: [ "bar" ]
      help: "help"
    }
  ];

  int32 baz = 4 [
    (stout.v1.flag) = {
      names: [ "baz" ]
      help: "help"
    }
  ];

  google.protobuf.Duration duration = 5 [
    (stout.v1.flag) = {
      names: [ "duration" ]
      help: "help"
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message MissingFlagName {
  string s = 1 [
    (stout.v1.flag) = {
      help: "help"
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message MissingFlagHelp {
  string s = 1 [
    (stout.v1.flag) = {
      names: "name"
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message DuplicateFlagName {
  string s1 = 1 [
    (stout.v1.flag) = {
      names: [ "same" ]
      help: "help"
    }
  ];

  string s2 = 2 [
    (stout.v1.flag) = {
      names: [ "other", "same" ]
      help: "help"
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message DuplicateFlagsDeath {
  string s = 1 [
    (stout.v1.flag) = {
      names: [ "s" ]
      help: "help"
    }
  ];

  string ss = 2 [
    (stout.v1.flag) = {
      names: [ "ss", "ss_alias" ]
      help: "help"
    }
  ];

  bool duplicate = 3 [
    (stout.v1.flag) = {
      names: [ "duplicate", "other" ]
      help: "help"
    }
  ];

  bool b = 4 [
    (stout.v1.flag) = {
      names: [ "b" ]
      help: "help"
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message BuildFlag {
  int32 other_flag = 1 [
    (stout.v1.flag) = {
      names: [ "other_flag" ]
      help: "help"
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message InfoFlag {
  string info = 1 [
    (stout.v1.flag) = {
      names: [ "info" ]
      help: "help"
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message SubcommandFlagsWithoutName {
  oneof subcommand {
    BuildFlag build = 1 [
      (stout.v1.subcommand) = {
        help: "help"
      }
    ];
    InfoFlag info_flag = 2 [
      (stout.v1.subcommand) = {
        names: [ "info_flag" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message SubcommandFlagsWithoutHelp {
  oneof subcommand {
    BuildFlag build = 1 [
      (stout.v1.subcommand) = {
        names: [ "build" ]
        help: "help"
      }
    ];
    InfoFlag info_flag = 2 [
      (stout.v1.subcommand) = {
        names: [ "info_flag" ]
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message SubcommandFlagsWithoutExtension {
  bool b = 1 [
    (stout.v1.flag) = {
      names: [ "b" ]
      help: "help"
    }
  ];

  oneof subcommand {
    BuildFlag build = 2 [
      (stout.v1.subcommand) = {
        names: [ "build" ]
        help: "help"
      }
    ];
    InfoFlag info_flag = 3;
  }
}

///////////////////////////////////////////////////////////////////////////////

message FlagsWithIncorrectExtension {
  bool b = 1 [
    (stout.v1.subcommand) = {
      names: [ "build" ]
      help: "help"
    }
  ];

  oneof subcommand {
    BuildFlag build = 2 [
      (stout.v1.subcommand) = {
        names: [ "build" ]
        help: "help"
      }
    ];
    InfoFlag info_flag = 3 [
      (stout.v1.subcommand) = {
        names: [ "info_flag" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message IncorrectOneofName {
  oneof other {
    BuildFlag build = 1 [
      (stout.v1.subcommand) = {
        names: [ "build" ]
        help: "help"
      }
    ];
    InfoFlag info_flag = 2 [
      (stout.v1.subcommand) = {
        names: [ "info_flag" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message SubcommandFlagExtension {
  oneof subcommand {
    BuildFlag build = 1 [
      (stout.v1.flag) = {
        names: [ "build" ]
        help: "help"
      }
    ];
    InfoFlag info_flag = 2 [
      (stout.v1.subcommand) = {
        names: [ "info_flag" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message SimpleSubcommandSucceed {
  bool b = 1 [
    (stout.v1.flag) = {
      names: [ "b" ]
      help: "help"
    }
  ];

  oneof subcommand {
    BuildFlag build = 2 [
      (stout.v1.subcommand) = {
        names: [ "build" ]
        help: "help"
      }
    ];
    InfoFlag info_flag = 3 [
      (stout.v1.subcommand) = {
        names: [ "info_flag" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message ComplicatedSubcommandMessage {
  string flag = 1 [
    (stout.v1.flag) = {
      names: [ "flag" ]
      help: "help"
    }
  ];

  string other = 2 [
    (stout.v1.flag) = {
      names: [ "other" ]
      help: "help"
    }
  ];

  oneof subcommand {
    SubcommandSubMessage1 sub1 = 3 [
      (stout.v1.subcommand) = {
        names: [ "sub1" ]
        help: "help"
      }
    ];
    SubcommandSubMessage2 sub2 = 4 [
      (stout.v1.subcommand) = {
        names: [ "sub2" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message SubcommandSubMessage1 {
  string another = 1 [
    (stout.v1.flag) = {
      names: [ "another" ]
      help: "help"
    }
  ];

  int32 num = 2 [
    (stout.v1.flag) = {
      names: [ "num" ]
      help: "help"
    }
  ];

  oneof subcommand {
    BuildFlag build = 3 [
      (stout.v1.subcommand) = {
        names: [ "build" ]
        help: "help"
      }
    ];
    InfoFlag info_flag = 4 [
      (stout.v1.subcommand) = {
        names: [ "info_flag" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message SubcommandSubMessage2 {
  string s = 1 [
    (stout.v1.flag) = {
      names: [ "s" ]
      help: "help"
    }
  ];

  oneof subcommand {
    BuildFlag build = 2 [
      (stout.v1.subcommand) = {
        names: [ "build" ]
        help: "help"
      }
    ];
    InfoFlag info_flag = 3 [
      (stout.v1.subcommand) = {
        names: [ "info_flag" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message DuplicateEnclosingFlagName {
  int32 other_flag = 1 [
    (stout.v1.flag) = {
      names: [ "other_flag" ]
      help: "help"
    }
  ];

  oneof subcommand {
    BuildFlag build = 2 [
      (stout.v1.subcommand) = {
        names: [ "build" ]
        help: "help"
      }
    ];
    InfoFlag info_flag = 3 [
      (stout.v1.subcommand) = {
        names: [ "info_flag" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message Rename {
  string cur_file_name = 1 [
    (stout.v1.argument) = {
      names: [ "cur_file_name", "current_file", "cur_file" ]
      help: "help"
      required: true
      position: 1
    }
  ];

  string new_file_name = 2 [
    (stout.v1.argument) = {
      names: [ "new_file_name", "new_file" ]
      help: "help"
      required: true
      position: 2
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message BuildFile {
  bool debug_mode = 1 [
    (stout.v1.flag) = {
      names: [ "debug_mode", "debug" ]
      help: "help"
    }
  ];

  string file = 2 [
    (stout.v1.argument) = {
      names: [ "file", "file_name" ]
      help: "help"
      required: true
      position: 1
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message ProcessFile {
  oneof subcommand {
    BuildFile build = 1 [
      (stout.v1.subcommand) = {
        names: [ "build" ]
        help: "help"
      }
    ];

    Rename rename = 2 [
      (stout.v1.subcommand) = {
        names: [ "rename" ]
        help: "help"
      }
    ];
  }
}

///////////////////////////////////////////////////////////////////////////////

message IllegalPositionalArg {
  int32 num = 1 [
    (stout.v1.argument) = {
      names: [ "num" ]
      help: "help"
      required: false
      position: 1
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////

message TopLevel {
  oneof subcommand {
    A1 a1 = 1 [
      (stout.v1.subcommand) = {
        names: [ "a1" ]
        help: "help"
      }
    ];

    A2 a2 = 2 [
      (stout.v1.subcommand) = {
        names: [ "a2" ]
        help: "help"
      }
    ];
  }
}

message A1 {
  oneof subcommand {
    B1 b1 = 1 [
      (stout.v1.subcommand) = {
        names: [ "b1" ]
        help: "help"
      }
    ];

    B2 b2 = 2 [
      (stout.v1.subcommand) = {
        names: [ "b2" ]
        help: "help"
      }
    ];
  }
}

message A2 {
  oneof subcommand {
    C1 c1 = 1 [
      (stout.v1.subcommand) = {
        names: [ "c1" ]
        help: "help"
      }
    ];

    C2 c2 = 2 [
      (stout.v1.subcommand) = {
        names: [ "c2" ]
        help: "help"
      }
    ];
  }
}

message B1 {
  oneof subcommand {
    D1 d1 = 1 [
      (stout.v1.subcommand) = {
        names: [ "d1" ]
        help: "help"
      }
    ];

    D2 d2 = 2 [
      (stout.v1.subcommand) = {
        names: [ "d2" ]
        help: "help"
      }
    ];
  }
}

message B2 {
  oneof subcommand {
    E1 e1 = 1 [
      (stout.v1.subcommand) = {
        names: [ "e1" ]
        help: "help"
      }
    ];

    E2 e2 = 2 [
      (stout.v1.subcommand) = {
        names: [ "e2" ]
        help: "help"
      }
    ];
  }
}

message C1 {
  oneof subcommand {
    F1 f1 = 1 [
      (stout.v1.subcommand) = {
        names: [ "f1" ]
        help: "help"
      }
    ];

    F2 f2 = 2 [
      (stout.v1.subcommand) = {
        names: [ "f2" ]
        help: "help"
      }
    ];
  }
}

message C2 {
  oneof subcommand {
    G1 g1 = 1 [
      (stout.v1.subcommand) = {
        names: [ "g1" ]
        help: "help"
      }
    ];

    G2 g2 = 2 [
      (stout.v1.subcommand) = {
        names: [ "g2" ]
        help: "help"
      }
    ];
  }
}

message D1 {
  int32 d1 = 1 [
    (stout.v1.flag) = {
      names: [ "d1" ]
      help: "help"
    }
  ];
}

message D2 {
  int32 d2 = 1 [
    (stout.v1.flag) = {
      names: [ "d2" ]
      help: "help"
    }
  ];
}

message E1 {
  int32 e1 = 1 [
    (stout.v1.flag) = {
      names: [ "e1" ]
      help: "help"
    }
  ];
}

message E2 {
  int32 e2 = 1 [
    (stout.v1.flag) = {
      names: [ "e2" ]
      help: "help"
    }
  ];
}

message F1 {
  int32 f1 = 1 [
    (stout.v1.flag) = {
      names: [ "f1" ]
      help: "help"
    }
  ];
}

message F2 {
  int32 f2 = 1 [
    (stout.v1.flag) = {
      names: [ "f2" ]
      help: "help"
    }
  ];
}

message G1 {
  int32 g1 = 1 [
    (stout.v1.flag) = {
      names: [ "g1" ]
      help: "help"
    }
  ];
}

message G2 {
  int32 g2 = 1 [
    (stout.v1.flag) = {
      names: [ "g2" ]
      help: "help"
    }
  ];
}

///////////////////////////////////////////////////////////////////////////////
